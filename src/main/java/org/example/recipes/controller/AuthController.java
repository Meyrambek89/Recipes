package org.example.recipes.controller;

import jakarta.servlet.http.HttpSession;
import org.example.recipes.entity.User;
import org.example.recipes.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@Controller
public class AuthController {
    @Autowired
    private UserRepository userRepository;



    @Autowired
    private PasswordEncoder passwordEncoder;


    @PostMapping("/register")
    public String processRegistration(@ModelAttribute User user) {
        // –ó–∞—Ö—ç—à–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª—å
        user.setPassword(passwordEncoder.encode(user.getPassword()));
        user.setRole("USER"); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–æ–ª—å
        userRepository.save(user);
        return "redirect:/login";
    }



    @PostMapping("/login")
    public String login(@RequestParam String email,
                        @RequestParam String password,
                        HttpSession session,
                        Model model) {

        Optional<User> userOpt = userRepository.findByEmail(email);

        if (userOpt.isPresent()) {
            User user = userOpt.get();

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
            if (user.getPassword().equals(password)) {
                session.setAttribute("currentUser", user); // ‚úÖ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–µ—Å—Å–∏—é

                // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ —Ä–æ–ª–∏
                if ("ADMIN".equals(user.getRole())) {
                    return "redirect:/admin/dashboard";
                } else {
                    return "redirect:/my-recipes"; // üëà –≤–º–µ—Å—Ç–æ /recipes
                }
            }
        }

        model.addAttribute("error", "–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å");
        return "login";
    }

}